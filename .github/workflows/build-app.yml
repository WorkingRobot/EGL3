name: Build EGL3

on: [push]

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019]
        include:
          - os: windows-2019
            name: Windows
            triplet: x64-windows
            configuration: x64-Release
            configuration-installer: x64-MinRel-Installer

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Get CMake
      uses: lukka/get-cmake@latest

    - name: Run Vcpkg - Installer
      uses: lukka/run-vcpkg@main
      with:
        vcpkgArguments: 'lz4 rapidjson'
        vcpkgTriplet: 'x64-windows-static'
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'

    - name: Run CMake - Installer
      uses: lukka/run-cmake@main
      with:
        cmakeListsOrSettingsJson: CMakeSettingsJson
        cmakeSettingsJsonPath: '${{ github.workspace }}/CMakeSettings.json'
        # cmakeAppendedArgs: '-DINSTALLER_VERSION:STRING=release'
        useVcpkgToolchainFile: true
        configurationRegexFilter: '${{ matrix.configuration-installer }}'

    - name: Run Vcpkg - Build
      uses: lukka/run-vcpkg@main
      with:
        vcpkgArguments: 'expat cpr mbedtls ixwebsocket rapidjson gtkmm'
        vcpkgTriplet: '${{ matrix.triplet }}'
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'

    - name: Run CMake - Build
      uses: lukka/run-cmake@main
      with:
        cmakeListsOrSettingsJson: CMakeSettingsJson
        cmakeSettingsJsonPath: '${{ github.workspace }}/CMakeSettings.json'
        useVcpkgToolchainFile: true
        configurationRegexFilter: '${{ matrix.configuration }}'

    - name: Execute Packer
      run: |
        cd "${{ github.workspace }}"
        xcopy /Y /E /Q extras/share/ "C:/Program Files (x86)/EGL3/share/"
        "${{ runner.temp }}/${{ matrix.configuration-installer }}/src/installer/packer/packer" "C:/Program Files (x86)/EGL3" archive.eglu
      shell: cmd

    - name: Upload EGLU
      uses: actions/upload-artifact@v2
      with:
        name: 'archive.eglu'
        path: '${{ github.workspace }}/archive.eglu'

    - name: Upload Installer
      uses: actions/upload-artifact@v2
      with:
        name: 'installer.exe'
        path: '${{ runner.temp }}/x64-MinRel-Installer/src/installer/installer/installer.exe'